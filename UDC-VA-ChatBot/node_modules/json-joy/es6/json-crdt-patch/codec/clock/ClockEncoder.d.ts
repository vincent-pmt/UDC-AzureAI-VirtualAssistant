import { ITimestampStruct, IVectorClock } from '../../clock';
import { RelativeTimestamp } from './RelativeTimestamp';
import type { CrdtWriter } from '../../util/binary/CrdtEncoder';
declare class ClockTableEntry {
    index: number;
    clock: ITimestampStruct;
    constructor(index: number, clock: ITimestampStruct);
}
export declare class ClockEncoder {
    readonly table: Map<number, ClockTableEntry>;
    protected index: number;
    clock: IVectorClock | null;
    reset(clock: IVectorClock): void;
    getIndex(sid: number): number;
    append(ts: ITimestampStruct): RelativeTimestamp;
    toJson(): number[];
    write(writer: CrdtWriter): void;
}
export {};
