"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isObjectReference = exports.isArrayEnd = exports.isArrayReference = exports.find = void 0;
var hasOwnProperty_1 = require("../util/hasOwnProperty");
var isArray = Array.isArray;
var find = function (val, path) {
    var pathLength = path.length;
    if (!pathLength)
        return { val: val };
    var obj;
    var key;
    for (var i = 0; i < pathLength; i++) {
        obj = val;
        key = path[i];
        if (isArray(obj)) {
            var length_1 = obj.length;
            if (key === '-')
                key = length_1;
            else {
                var key2 = ~~key;
                if ('' + key2 !== key)
                    throw new Error('INVALID_INDEX');
                key = key2;
                if (key < 0)
                    throw new Error('INVALID_INDEX');
            }
            val = obj[key];
        }
        else if (typeof obj === 'object' && !!obj) {
            val = (0, hasOwnProperty_1.hasOwnProperty)(obj, key) ? obj[key] : undefined;
        }
        else
            throw new Error('NOT_FOUND');
    }
    var ref = { val: val, obj: obj, key: key };
    return ref;
};
exports.find = find;
var isArrayReference = function (ref) {
    return isArray(ref.obj) && typeof ref.key === 'number';
};
exports.isArrayReference = isArrayReference;
var isArrayEnd = function (ref) { return ref.obj.length === ref.key; };
exports.isArrayEnd = isArrayEnd;
var isObjectReference = function (ref) {
    return typeof ref.obj === 'object' && typeof ref.key === 'string';
};
exports.isObjectReference = isObjectReference;
