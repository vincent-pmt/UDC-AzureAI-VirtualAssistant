"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClockDecoder = void 0;
var clock_1 = require("../../clock");
var ClockDecoder = (function () {
    function ClockDecoder(sid, time) {
        this.table = [];
        this.clock = new clock_1.VectorClock(sid, time + 1);
        this.table.push((0, clock_1.ts)(sid, time));
    }
    ClockDecoder.fromArr = function (arr) {
        var decoder = new ClockDecoder(arr[0], arr[1]);
        var length = arr.length;
        for (var i = 2; i < length; i += 2)
            decoder.pushTuple(arr[i], arr[i + 1]);
        return decoder;
    };
    ClockDecoder.from = function (reader) {
        var length = reader.vu57();
        var tuple = reader.u53vu39();
        var decoder = new ClockDecoder(tuple[0], tuple[1]);
        for (var i = 2; i < length; i += 2) {
            var tuple_1 = reader.u53vu39();
            decoder.pushTuple(tuple_1[0], tuple_1[1]);
        }
        return decoder;
    };
    ClockDecoder.prototype.pushTuple = function (sid, time) {
        var id = (0, clock_1.ts)(sid, time);
        this.clock.observe(id, 1);
        this.table.push(id);
    };
    ClockDecoder.prototype.decodeId = function (sessionIndex, timeDiff) {
        if (!sessionIndex)
            return (0, clock_1.ts)(0, timeDiff);
        var clock = this.table[sessionIndex - 1];
        if (!clock)
            throw new Error('INVALID_CLOCK_TABLE');
        return (0, clock_1.ts)(clock.sid, clock.time - timeDiff);
    };
    return ClockDecoder;
}());
exports.ClockDecoder = ClockDecoder;
