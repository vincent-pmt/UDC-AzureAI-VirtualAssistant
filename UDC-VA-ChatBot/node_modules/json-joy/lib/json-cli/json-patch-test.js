"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var child_process_1 = require("child_process");
var json_patch_1 = require("../json-patch");
var deepEqual_1 = require("../json-equal/deepEqual");
var suites_1 = require("./test/suites");
var bin = String(process.argv[2]);
if (!bin) {
    console.error('First argument should be argument to json-patch binary.');
    process.exit(1);
}
var cntCorrect = 0;
var cntFailed = 0;
suites_1.testSuites.forEach(function (suite) {
    console.log('');
    console.log(suite.name);
    console.log('');
    suite.tests.forEach(function (test) {
        if (test.disabled)
            return;
        var testName = test.comment || test.error || JSON.stringify(test.patch);
        if (test.expected !== undefined) {
            test.patch.forEach(json_patch_1.validateOperation);
            var isCorrect = false;
            var result = void 0;
            try {
                var input = JSON.stringify(test.doc);
                var stdout = (0, child_process_1.spawnSync)(bin, [JSON.stringify(test.patch)], { input: input }).stdout;
                result = JSON.parse(stdout.toString());
                isCorrect = (0, deepEqual_1.deepEqual)(result, test.expected);
            }
            catch (_a) {
                isCorrect = false;
            }
            if (isCorrect) {
                cntCorrect++;
                console.log('âœ… ' + testName);
            }
            else {
                cntFailed++;
                console.error('ðŸ›‘ ' + testName);
                console.log('Expected:');
                console.log(test.expected);
                console.log('Received:');
                console.log(result);
            }
        }
        else if (test.error) {
            var input = JSON.stringify(test.doc);
            var _b = (0, child_process_1.spawnSync)(bin, [JSON.stringify(test.patch)], { input: input }), status_1 = _b.status, stdout = _b.stdout, stderr = _b.stderr;
            var isCorrect = true;
            if (status_1 === 0)
                isCorrect = false;
            var output = stderr.toString().trim() || stdout.toString().trim();
            if (output !== test.error)
                isCorrect = false;
            if (!isCorrect) {
                cntFailed++;
                console.error('ðŸ›‘ ' + testName);
                if (output !== test.error) {
                    console.error('Expected: ', test.error);
                    console.error('Received: ', output);
                }
            }
            else {
                cntCorrect++;
                console.log('âœ… ' + testName);
            }
        }
        else {
            throw new Error('invalid test case');
        }
        if (cntFailed)
            process.exit(1);
    });
});
console.log('');
console.log("Successful = ".concat(cntCorrect, ", Failed = ").concat(cntFailed, ", Total = ").concat(cntCorrect + cntFailed));
console.log('');
if (cntFailed > 0)
    process.exit(1);
