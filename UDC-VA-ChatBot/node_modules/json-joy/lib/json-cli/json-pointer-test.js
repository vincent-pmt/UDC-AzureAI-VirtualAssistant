"use strict";
var e_1, _a;
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var child_process_1 = require("child_process");
var json_pointer_testCases_1 = require("./json-pointer-testCases");
var deepEqual_1 = require("../json-equal/deepEqual");
var bin = String(process.argv[2]);
if (!bin) {
    console.error('First argument should be argument to json-patch binary.');
    process.exit(1);
}
console.log('');
console.log("Running JSON Pointer tests.");
console.log('');
var cntCorrect = 0;
var cntFailed = 0;
try {
    for (var testCases_1 = tslib_1.__values(json_pointer_testCases_1.testCases), testCases_1_1 = testCases_1.next(); !testCases_1_1.done; testCases_1_1 = testCases_1.next()) {
        var _b = testCases_1_1.value, name_1 = _b.name, doc = _b.doc, pointer = _b.pointer, result = _b.result, error = _b.error;
        var _c = (0, child_process_1.spawnSync)(bin, [pointer], { input: JSON.stringify(doc) }), stdout = _c.stdout, stderr = _c.stderr;
        var isCorrect = false;
        if (error === undefined) {
            isCorrect = (0, deepEqual_1.deepEqual)(result, JSON.parse(stdout.toString()));
        }
        else {
            var errorMessage = stderr.toString().trim();
            isCorrect = errorMessage === error;
        }
        if (isCorrect) {
            cntCorrect++;
            console.log('âœ… ' + name_1);
        }
        else {
            cntFailed++;
            console.error('ðŸ›‘ ' + name_1);
        }
    }
}
catch (e_1_1) { e_1 = { error: e_1_1 }; }
finally {
    try {
        if (testCases_1_1 && !testCases_1_1.done && (_a = testCases_1.return)) _a.call(testCases_1);
    }
    finally { if (e_1) throw e_1.error; }
}
console.log('');
console.log("Successful = ".concat(cntCorrect, ", Failed = ").concat(cntFailed, ", Total = ").concat(json_pointer_testCases_1.testCases.length));
console.log('');
if (cntFailed > 0)
    process.exit(1);
