"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OpTestStringLen = void 0;
var tslib_1 = require("tslib");
var AbstractPredicateOp_1 = require("./AbstractPredicateOp");
var json_pointer_1 = require("../../json-pointer");
var OpTestStringLen = (function (_super) {
    tslib_1.__extends(OpTestStringLen, _super);
    function OpTestStringLen(path, len, not) {
        var _this = _super.call(this, path) || this;
        _this.len = len;
        _this.not = not;
        return _this;
    }
    OpTestStringLen.prototype.op = function () {
        return 'test_string_len';
    };
    OpTestStringLen.prototype.code = function () {
        return 41;
    };
    OpTestStringLen.prototype.test = function (doc) {
        var val = (0, json_pointer_1.find)(doc, this.path).val;
        if (typeof val !== 'string')
            return false;
        var length = val.length;
        var test = length >= this.len;
        return this.not ? !test : test;
    };
    OpTestStringLen.prototype.toJson = function (parent) {
        var op = {
            op: 'test_string_len',
            path: (0, json_pointer_1.formatJsonPointer)(parent ? this.path.slice(parent.path.length) : this.path),
            len: this.len,
        };
        if (this.not)
            op.not = this.not;
        return op;
    };
    OpTestStringLen.prototype.toCompact = function (parent, verbose) {
        var opcode = verbose ? 'test_string_len' : 41;
        var path = parent ? this.path.slice(parent.path.length) : this.path;
        return this.not ? [opcode, path, this.len, 1] : [opcode, path, this.len];
    };
    OpTestStringLen.prototype.encode = function (encoder, parent) {
        encoder.encodeArrayHeader(this.not ? 4 : 3);
        encoder.writer.u8(41);
        encoder.encodeArray(parent ? this.path.slice(parent.path.length) : this.path);
        encoder.encodeNumber(this.len);
        if (this.not)
            encoder.writer.u8(1);
    };
    return OpTestStringLen;
}(AbstractPredicateOp_1.AbstractPredicateOp));
exports.OpTestStringLen = OpTestStringLen;
