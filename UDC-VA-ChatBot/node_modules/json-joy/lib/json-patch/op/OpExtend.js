"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OpExtend = void 0;
var tslib_1 = require("tslib");
var AbstractOp_1 = require("./AbstractOp");
var json_pointer_1 = require("../../json-pointer");
var isArray = Array.isArray;
var OpExtend = (function (_super) {
    tslib_1.__extends(OpExtend, _super);
    function OpExtend(path, props, deleteNull) {
        var _this = _super.call(this, path) || this;
        _this.props = props;
        _this.deleteNull = deleteNull;
        return _this;
    }
    OpExtend.prototype.op = function () {
        return 'extend';
    };
    OpExtend.prototype.code = function () {
        return 12;
    };
    OpExtend.prototype.apply = function (doc) {
        var ref = (0, json_pointer_1.find)(doc, this.path);
        if ((0, json_pointer_1.isArrayReference)(ref)) {
            if (ref.val !== undefined) {
                ref.obj[ref.key] = this.extend(ref.val);
            }
        }
        else if ((0, json_pointer_1.isObjectReference)(ref)) {
            ref.obj[ref.key] = this.extend(ref.val);
        }
        else {
            doc = this.extend(doc);
        }
        return { doc: doc };
    };
    OpExtend.prototype.extend = function (value) {
        var e_1, _a;
        if (isArray(value))
            return value;
        if (typeof value !== 'object')
            return value;
        if (!value)
            return value;
        try {
            for (var _b = tslib_1.__values(Object.entries(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var _d = tslib_1.__read(_c.value, 2), key = _d[0], v = _d[1];
                if (key === '__proto__')
                    throw new Error('NO_PROTO');
                if (v === null && this.deleteNull) {
                    delete value[key];
                    continue;
                }
                value[key] = v;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return value;
    };
    OpExtend.prototype.toJson = function (parent) {
        var op = {
            op: 'extend',
            path: (0, json_pointer_1.formatJsonPointer)(this.path),
            props: this.props,
        };
        if (this.deleteNull)
            op.deleteNull = this.deleteNull;
        return op;
    };
    OpExtend.prototype.toCompact = function (parent, verbose) {
        var opcode = verbose ? 'extend' : 12;
        return this.deleteNull ? [opcode, this.path, this.props, 1] : [opcode, this.path, this.props];
    };
    OpExtend.prototype.encode = function (encoder, parent) {
        var deleteNull = this.deleteNull;
        encoder.encodeArrayHeader(deleteNull ? 4 : 3);
        encoder.writer.u8(12);
        encoder.encodeArray(this.path);
        encoder.encodeObject(this.props);
        if (deleteNull)
            encoder.writer.u8(1);
    };
    return OpExtend;
}(AbstractOp_1.AbstractOp));
exports.OpExtend = OpExtend;
