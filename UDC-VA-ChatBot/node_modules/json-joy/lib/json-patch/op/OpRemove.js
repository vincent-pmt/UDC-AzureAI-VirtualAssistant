"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OpRemove = void 0;
var tslib_1 = require("tslib");
var AbstractOp_1 = require("./AbstractOp");
var json_pointer_1 = require("../../json-pointer");
var OpRemove = (function (_super) {
    tslib_1.__extends(OpRemove, _super);
    function OpRemove(path, oldValue) {
        var _this = _super.call(this, path) || this;
        _this.oldValue = oldValue;
        return _this;
    }
    OpRemove.prototype.op = function () {
        return 'remove';
    };
    OpRemove.prototype.code = function () {
        return 1;
    };
    OpRemove.prototype.apply = function (doc) {
        var ref = (0, json_pointer_1.find)(doc, this.path);
        if (ref.val === undefined)
            throw new Error('NOT_FOUND');
        if ((0, json_pointer_1.isObjectReference)(ref))
            delete ref.obj[ref.key];
        else if ((0, json_pointer_1.isArrayReference)(ref)) {
            if (ref.val !== undefined)
                ref.obj.splice(ref.key, 1);
        }
        else
            doc = null;
        return { doc: doc, old: ref.val };
    };
    OpRemove.prototype.toJson = function (parent) {
        var json = {
            op: 'remove',
            path: (0, json_pointer_1.formatJsonPointer)(this.path),
        };
        if (this.oldValue !== undefined)
            json.oldValue = this.oldValue;
        return json;
    };
    OpRemove.prototype.toCompact = function (parent, verbose) {
        var opcode = verbose ? 'remove' : 1;
        return this.oldValue === undefined
            ? [opcode, this.path]
            : [opcode, this.path, this.oldValue];
    };
    OpRemove.prototype.encode = function (encoder, parent) {
        var hasOldValue = this.oldValue !== undefined;
        encoder.encodeArrayHeader(hasOldValue ? 3 : 2);
        encoder.writer.u8(1);
        encoder.encodeArray(this.path);
        if (hasOldValue)
            encoder.encodeAny(this.oldValue);
    };
    return OpRemove;
}(AbstractOp_1.AbstractOp));
exports.OpRemove = OpRemove;
