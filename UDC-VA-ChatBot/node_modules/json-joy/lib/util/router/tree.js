"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoutingTreeNode = void 0;
var tslib_1 = require("tslib");
var helpers_1 = require("../codegen/util/helpers");
var printTree_1 = require("../print/printTree");
var RadixTree_1 = require("../trees/radix/RadixTree");
var router_1 = require("./router");
var steps_1 = require("./steps");
var genExactMatchCondition = function (text, opts) {
    return (0, helpers_1.emitStringMatch)('str', opts.offset, text);
};
var RoutingTreeNode = (function () {
    function RoutingTreeNode() {
        this.exact = new Map();
        this.start = new RadixTree_1.RadixTree();
        this.until = [];
        this.regex = [];
    }
    RoutingTreeNode.prototype.add = function (route, step, destination) {
        var _a;
        var isLast = step === route.steps.length - 1;
        var match = route.steps[step];
        if (match instanceof steps_1.ExactStep) {
            if (isLast) {
                var exact = (_a = this.exact.get(match.text.length)) !== null && _a !== void 0 ? _a : [];
                exact.push([match, destination]);
                this.exact.set(match.text.length, exact);
            }
            else {
                var child = this.start.get(match.text);
                if (child)
                    child.add(route, step + 1, destination);
                else {
                    var node = new RoutingTreeNode();
                    this.start.set(match.text, node);
                    node.add(route, step + 1, destination);
                }
            }
        }
        else if (match instanceof steps_1.UntilStep) {
            var until = this.until.find(function (_a) {
                var _b = tslib_1.__read(_a, 2), step = _b[0], dest = _b[1];
                return step.until === match.until && step.name === match.name && dest instanceof RoutingTreeNode;
            });
            if (!until || !(until[1] instanceof RoutingTreeNode)) {
                until = [match, new RoutingTreeNode()];
                this.until.push(until);
            }
            if (isLast) {
                until[1].end = destination;
            }
            else {
                until[1].add(route, step + 1, destination);
            }
        }
        else if (match instanceof steps_1.RegexStep) {
            if (isLast) {
                this.regex.push([match, destination]);
            }
            else {
                var regex = this.regex.find(function (_a) {
                    var _b = tslib_1.__read(_a, 2), step = _b[0], dest = _b[1];
                    return step.regex === match.regex &&
                        step.until === match.until &&
                        step.name === match.name &&
                        dest instanceof RoutingTreeNode;
                });
                if (regex && regex[1] instanceof RoutingTreeNode) {
                    regex[1].add(route, step + 1, destination);
                }
                else {
                    var node = new RoutingTreeNode();
                    this.regex.push([match, node]);
                    node.add(route, step + 1, destination);
                }
            }
        }
    };
    RoutingTreeNode.prototype.codegen = function (ctx, opts) {
        var e_1, _a, e_2, _b, e_3, _c, e_4, _d;
        var code = ctx.codegen;
        if (this.exact.size) {
            if (!opts.depth) {
                code.switch('len', tslib_1.__spreadArray([], tslib_1.__read(this.exact), false).map(function (_a) {
                    var _b = tslib_1.__read(_a, 2), length = _b[0], destinations = _b[1];
                    return [
                        length,
                        function () {
                            code.switch('str', destinations.map(function (_a) {
                                var _b = tslib_1.__read(_a, 2), step = _b[0], destination = _b[1];
                                var m = code.linkDependency(destination.match);
                                return [JSON.stringify(step.text), function () { return code.return("".concat(m, ".params = null, ").concat(m)); }, true];
                            }));
                        },
                    ];
                }));
            }
            else {
                try {
                    for (var _e = tslib_1.__values(this.exact.values()), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var destinations = _f.value;
                        var _loop_1 = function (step, destination) {
                            var m = code.linkDependency(destination.match);
                            code.if("(".concat(step.text.length, " + ").concat(opts.offset, " === len) && ").concat(genExactMatchCondition(step.text, opts)), function () { return code.return("".concat(m, ".params = params, ").concat(m)); });
                        };
                        try {
                            for (var destinations_1 = (e_2 = void 0, tslib_1.__values(destinations)), destinations_1_1 = destinations_1.next(); !destinations_1_1.done; destinations_1_1 = destinations_1.next()) {
                                var _g = tslib_1.__read(destinations_1_1.value, 2), step = _g[0], destination = _g[1];
                                _loop_1(step, destination);
                            }
                        }
                        catch (e_2_1) { e_2 = { error: e_2_1 }; }
                        finally {
                            try {
                                if (destinations_1_1 && !destinations_1_1.done && (_b = destinations_1.return)) _b.call(destinations_1);
                            }
                            finally { if (e_2) throw e_2.error; }
                        }
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            }
        }
        if (!opts.depth) {
            code.js('var params = [];');
        }
        var emitRadixTreeNode = function (node, opts) {
            var text = node.k;
            var length = text.length;
            var block = function () {
                var offset = length ? code.var("".concat(opts.offset, " + ").concat(length)) : opts.offset;
                node.forChildren(function (child) {
                    emitRadixTreeNode(child, opts.create(offset));
                });
                var routingNode = node.v;
                if (routingNode) {
                    routingNode.codegen(ctx, opts.create(offset));
                }
            };
            if (text) {
                code.if(genExactMatchCondition(text, opts), block);
            }
            else
                block();
        };
        emitRadixTreeNode(this.start, opts);
        if (this.until.length) {
            var _loop_2 = function (step, destination) {
                if (destination.end && step.until === '\n') {
                    var m = code.linkDependency(destination.end.match);
                    if (step.name)
                        code.js("params.push(str.slice(".concat(opts.offset, ", len));"));
                    code.return("".concat(m, ".params = params, ").concat(m));
                }
                else {
                    var ri_1 = code.var("str.indexOf(".concat(JSON.stringify(step.until), ", ").concat(opts.offset, ")"));
                    if (destination.end) {
                        var m_1 = code.linkDependency(destination.end.match);
                        code.if("".concat(ri_1, " === -1"), function () {
                            if (step.name)
                                code.js("params.push(str.slice(".concat(opts.offset, ", len));"));
                            code.return("".concat(m_1, ".params = params, ").concat(m_1));
                        });
                    }
                    if (destination.exact.size ||
                        destination.start.size ||
                        destination.until.length ||
                        destination.regex.length) {
                        code.if("".concat(ri_1, " > ").concat(opts.offset), function () {
                            if (step.name)
                                code.js("params.push(str.slice(".concat(opts.offset, ", ").concat(ri_1, "));"));
                            destination.codegen(ctx, opts.create(ri_1));
                            if (step.name)
                                code.js("params.pop();");
                        });
                    }
                }
            };
            try {
                for (var _h = tslib_1.__values(this.until), _j = _h.next(); !_j.done; _j = _h.next()) {
                    var _k = tslib_1.__read(_j.value, 2), step = _k[0], destination = _k[1];
                    _loop_2(step, destination);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        if (this.regex.length) {
            var _loop_3 = function (step, destination) {
                var isDestination = destination instanceof router_1.Destination;
                var r = code.var("str.slice(".concat(opts.offset, ")"));
                var regex = new RegExp('^' + step.regex + step.until + (isDestination ? '$' : ''));
                var reg = code.linkDependency(regex);
                var match = code.var("".concat(r, ".match(").concat(reg, ")"));
                if (isDestination) {
                    code.if(match, function () {
                        var val = code.var("".concat(match, "[1] || ").concat(match, "[0]"));
                        var m = code.linkDependency(destination.match);
                        if (step.name)
                            code.js("params.push(".concat(val, ");"));
                        code.return("".concat(m, ".params = params, ").concat(m));
                    });
                }
                else {
                    code.if(match, function () {
                        var val = code.var("".concat(match, "[1] || ").concat(match, "[0]"));
                        var offset = code.var("".concat(opts.offset, " + ").concat(val, ".length"));
                        if (step.name)
                            code.js("params.push(".concat(val, ");"));
                        destination.codegen(ctx, opts.create(offset));
                        if (step.name)
                            code.js("params.pop();");
                    });
                }
            };
            try {
                for (var _l = tslib_1.__values(this.regex), _m = _l.next(); !_m.done; _m = _l.next()) {
                    var _o = tslib_1.__read(_m.value, 2), step = _o[0], destination = _o[1];
                    _loop_3(step, destination);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
    };
    RoutingTreeNode.prototype.toString = function (tab) {
        var _this = this;
        return ("".concat(this.constructor.name, " ") +
            (0, printTree_1.printTree)(tab, [
                !this.exact.size
                    ? null
                    : function (tab) {
                        return 'exact ' +
                            (0, printTree_1.printTree)(tab, tslib_1.__spreadArray([], tslib_1.__read(_this.exact), false).map(function (_a) {
                                var _b = tslib_1.__read(_a, 2), length = _b[0], destinations = _b[1];
                                return function (tab) {
                                    return "".concat(length, " ") +
                                        (0, printTree_1.printTree)(tab, destinations.map(function (_a) {
                                            var _b = tslib_1.__read(_a, 2), step = _b[0], destination = _b[1];
                                            return function (tab) {
                                                return "".concat(JSON.stringify(step.toText())).concat(destination instanceof router_1.Destination ? ' →' : '', " ").concat(destination.toString(tab + ' '));
                                            };
                                        }));
                                };
                            }));
                    },
                !this.end ? null : function (tab) { return 'end → ' + _this.end.toString(tab); },
                !this.start.size ? null : function (tab) { return 'start ' + _this.start.toString(tab); },
                !this.until.length
                    ? null
                    : function (tab) {
                        return 'until ' +
                            (0, printTree_1.printTree)(tab, _this.until.map(function (_a) {
                                var _b = tslib_1.__read(_a, 2), step = _b[0], destination = _b[1];
                                return function (tab) {
                                    return "".concat(step.toText()).concat(destination instanceof router_1.Destination ? ' →' : '', " ").concat(destination.toString(tab));
                                };
                            }));
                    },
                !this.regex.length
                    ? null
                    : function (tab) {
                        return 'regex ' +
                            (0, printTree_1.printTree)(tab, _this.regex.map(function (_a) {
                                var _b = tslib_1.__read(_a, 2), step = _b[0], destination = _b[1];
                                return function (tab) {
                                    return "".concat(step.toText()).concat(destination instanceof router_1.Destination ? ' →' : '', " ").concat(destination.toString(tab));
                                };
                            }));
                    },
            ]));
    };
    return RoutingTreeNode;
}());
exports.RoutingTreeNode = RoutingTreeNode;
