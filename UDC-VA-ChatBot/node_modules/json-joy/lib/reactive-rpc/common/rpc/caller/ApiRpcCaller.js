"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiRpcCaller = void 0;
var tslib_1 = require("tslib");
var StaticRpcMethod_1 = require("../methods/StaticRpcMethod");
var StreamingRpcMethod_1 = require("../methods/StreamingRpcMethod");
var RpcCaller_1 = require("./RpcCaller");
var ApiRpcCaller = (function (_super) {
    tslib_1.__extends(ApiRpcCaller, _super);
    function ApiRpcCaller(_a) {
        var _this = this;
        var api = _a.api, rest = tslib_1.__rest(_a, ["api"]);
        _this = _super.call(this, tslib_1.__assign(tslib_1.__assign({}, rest), { getMethod: function (name) { return _this.get(name); } })) || this;
        _this.methods = new Map();
        for (var key in api) {
            var method = api[key];
            _this.methods.set(key, (method.isStreaming ? new StreamingRpcMethod_1.StreamingRpcMethod(method) : new StaticRpcMethod_1.StaticRpcMethod(method)));
        }
        return _this;
    }
    ApiRpcCaller.prototype.get = function (name) {
        return this.methods.get(name);
    };
    return ApiRpcCaller;
}(RpcCaller_1.RpcCaller));
exports.ApiRpcCaller = ApiRpcCaller;
