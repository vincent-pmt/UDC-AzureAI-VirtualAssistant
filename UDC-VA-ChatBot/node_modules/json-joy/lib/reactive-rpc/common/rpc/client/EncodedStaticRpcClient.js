"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EncodedStaticRpcClient = void 0;
var tslib_1 = require("tslib");
var EncodedStaticRpcClient = (function () {
    function EncodedStaticRpcClient(_a) {
        var send = _a.send, msgCodec = _a.msgCodec, reqCodec = _a.reqCodec, _b = _a.resCodec, resCodec = _b === void 0 ? reqCodec : _b, client = _a.client;
        var _this = this;
        this.client = client;
        client.onsend = function (messages) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var buf, res, resultMessages;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        buf = msgCodec.encode(reqCodec, messages);
                        return [4, send(buf)];
                    case 1:
                        res = _a.sent();
                        resultMessages = msgCodec.decodeBatch(resCodec, res);
                        return [2, resultMessages];
                }
            });
        }); };
    }
    EncodedStaticRpcClient.prototype.call$ = function (method, data) {
        return this.client.call$(method, data);
    };
    EncodedStaticRpcClient.prototype.call = function (method, request) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2, this.call(method, request)];
            });
        });
    };
    EncodedStaticRpcClient.prototype.notify = function (method, data) {
        this.notify(method, data);
    };
    return EncodedStaticRpcClient;
}());
exports.EncodedStaticRpcClient = EncodedStaticRpcClient;
