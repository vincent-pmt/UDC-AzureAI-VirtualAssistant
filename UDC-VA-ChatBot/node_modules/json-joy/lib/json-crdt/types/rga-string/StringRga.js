"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StringRga = exports.StringChunk = void 0;
var tslib_1 = require("tslib");
var clock_1 = require("../../../json-crdt-patch/clock");
var AbstractRga_1 = require("../rga/AbstractRga");
var StringChunk = (function () {
    function StringChunk(id, span, str) {
        this.id = id;
        this.span = span;
        this.len = str ? span : 0;
        this.del = !str;
        this.p = undefined;
        this.l = undefined;
        this.r = undefined;
        this.p2 = undefined;
        this.l2 = undefined;
        this.r2 = undefined;
        this.s = undefined;
        this.data = str;
    }
    StringChunk.prototype.merge = function (str) {
        this.data += str;
        this.span = this.data.length;
    };
    StringChunk.prototype.split = function (ticks) {
        if (!this.del) {
            var chunk_1 = new StringChunk((0, clock_1.tick)(this.id, ticks), this.span - ticks, this.data.slice(ticks));
            this.data = this.data.slice(0, ticks);
            this.span = ticks;
            return chunk_1;
        }
        var chunk = new StringChunk((0, clock_1.tick)(this.id, ticks), this.span - ticks, '');
        this.span = ticks;
        return chunk;
    };
    StringChunk.prototype.delete = function () {
        this.del = true;
        this.data = '';
    };
    StringChunk.prototype.clone = function () {
        var chunk = new StringChunk(this.id, this.span, this.data);
        return chunk;
    };
    return StringChunk;
}());
exports.StringChunk = StringChunk;
var StringRga = (function (_super) {
    tslib_1.__extends(StringRga, _super);
    function StringRga() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._view = '';
        return _this;
    }
    StringRga.prototype.create = function () {
        return new StringRga(this.id);
    };
    StringRga.prototype.createChunk = function (id, str) {
        return new StringChunk(id, str ? str.length : 0, str || '');
    };
    StringRga.prototype.onViewChange = function () {
        this._view = '';
    };
    StringRga.prototype.view = function () {
        if (this._view)
            return this._view;
        var str = '';
        for (var chunk = this.first(); chunk; chunk = this.next(chunk))
            str += chunk.data;
        return (this._view = str);
    };
    StringRga.prototype.children = function () { };
    StringRga.prototype.child = function () {
        return undefined;
    };
    StringRga.prototype.container = function () {
        return undefined;
    };
    return StringRga;
}(AbstractRga_1.AbstractRga));
exports.StringRga = StringRga;
