"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isLiteral = exports.substr = exports.slash = exports.betweenEqEq = exports.betweenEqNe = exports.betweenNeEq = exports.betweenNeNe = exports.int = exports.num = exports.isInContainer = exports.ends = exports.contains = exports.starts = exports.str = exports.type = exports.throwOnUndef = exports.get = void 0;
var deepEqual_1 = require("../json-equal/deepEqual");
var json_pointer_1 = require("../json-pointer");
var get = function (path, data) { return (0, json_pointer_1.get)(data, (0, json_pointer_1.toPath)(path)); };
exports.get = get;
var throwOnUndef = function (value, def) {
    if (value !== undefined)
        return value;
    if (def === undefined)
        throw new Error('NOT_FOUND');
    return def;
};
exports.throwOnUndef = throwOnUndef;
var type = function (value) {
    if (value === null)
        return 'null';
    if (value instanceof Array)
        return 'array';
    return typeof value;
};
exports.type = type;
var str = function (value) {
    if (typeof value !== 'object')
        return '' + value;
    return JSON.stringify(value);
};
exports.str = str;
var starts = function (outer, inner) {
    return (0, exports.str)(outer).indexOf((0, exports.str)(inner)) === 0;
};
exports.starts = starts;
var contains = function (outer, inner) {
    return (0, exports.str)(outer).indexOf((0, exports.str)(inner)) > -1;
};
exports.contains = contains;
var ends = function (outer, inner) {
    var o = (0, exports.str)(outer);
    var i = (0, exports.str)(inner);
    return o.indexOf(i) === o.length - i.length;
};
exports.ends = ends;
var isInContainer = function (what, container) {
    var length = container.length;
    for (var i = 0; i < length; i++)
        if ((0, deepEqual_1.deepEqual)(container[i], what))
            return true;
    return false;
};
exports.isInContainer = isInContainer;
var num = function (value) { return +value || 0; };
exports.num = num;
var int = function (value) { return ~~value; };
exports.int = int;
var betweenNeNe = function (val, min, max) { return val > min && val < max; };
exports.betweenNeNe = betweenNeNe;
var betweenNeEq = function (val, min, max) { return val > min && val <= max; };
exports.betweenNeEq = betweenNeEq;
var betweenEqNe = function (val, min, max) { return val >= min && val < max; };
exports.betweenEqNe = betweenEqNe;
var betweenEqEq = function (val, min, max) { return val >= min && val <= max; };
exports.betweenEqEq = betweenEqEq;
var slash = function (a, b) {
    var res = (0, exports.num)(a) / (0, exports.num)(b);
    return Number.isFinite(res) ? res : 0;
};
exports.slash = slash;
var substr = function (probablyString, from, length) {
    return (0, exports.str)(probablyString).substr((0, exports.int)(from), (0, exports.int)(length));
};
exports.substr = substr;
var isLiteral = function (value) {
    if (value instanceof Array)
        return value.length === 1 && value[0] instanceof Array;
    else
        return true;
};
exports.isLiteral = isLiteral;
