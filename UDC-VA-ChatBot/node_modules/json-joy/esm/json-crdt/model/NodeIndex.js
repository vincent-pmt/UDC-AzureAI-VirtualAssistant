import { toDisplayString } from '../../json-crdt-patch/clock';
export class NodeIndex {
    entries = new Map();
    get(id) {
        const { time } = id;
        const sessionId = id.sid;
        const map1 = this.entries;
        const map2 = map1.get(sessionId);
        if (!map2)
            return undefined;
        const operation = map2.get(time);
        if (operation)
            return operation;
        return undefined;
    }
    set(operation) {
        const { id } = operation;
        const sessionId = id.sid;
        const { time } = id;
        let map = this.entries.get(sessionId);
        if (!map) {
            map = new Map();
            this.entries.set(sessionId, map);
        }
        map.set(time, operation);
    }
    delete(id) {
        const { time } = id;
        const timeMap = this.entries.get(id.sid);
        if (!timeMap)
            return;
        timeMap.delete(time);
    }
    forEach(callback) {
        this.entries.forEach((map) => {
            map.forEach(callback);
        });
    }
    toString(tab = '') {
        const lines = [];
        this.forEach((node) => {
            lines.push(`${node.constructor.name} ${toDisplayString(node.id)}`);
        });
        let out = '';
        for (let i = 0; i < lines.length; i++) {
            const isLast = i === lines.length - 1;
            out += `\n${tab}${isLast ? '└─' : '├─'} ${lines[i]}`;
        }
        return `${this.constructor.name}${out}`;
    }
}
