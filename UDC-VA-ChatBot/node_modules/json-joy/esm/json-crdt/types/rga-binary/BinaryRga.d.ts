import type { JsonNode } from '../../types';
import { ITimestampStruct } from '../../../json-crdt-patch/clock';
import { AbstractRga, Chunk } from '../rga/AbstractRga';
export declare class BinaryChunk implements Chunk<Uint8Array> {
    readonly id: ITimestampStruct;
    span: number;
    del: boolean;
    data: Uint8Array | undefined;
    len: number;
    p: BinaryChunk | undefined;
    l: BinaryChunk | undefined;
    r: BinaryChunk | undefined;
    p2: BinaryChunk | undefined;
    l2: BinaryChunk | undefined;
    r2: BinaryChunk | undefined;
    s: BinaryChunk | undefined;
    constructor(id: ITimestampStruct, span: number, buf: Uint8Array | undefined);
    merge(data: Uint8Array): void;
    split(ticks: number): BinaryChunk;
    delete(): void;
    clone(): BinaryChunk;
}
export declare class BinaryRga extends AbstractRga<Uint8Array> implements JsonNode {
    protected create(): BinaryRga;
    createChunk(id: ITimestampStruct, buf: Uint8Array | undefined): BinaryChunk;
    protected onViewChange(): void;
    private _view;
    view(): Uint8Array;
    children(): void;
    child(): undefined;
    container(): JsonNode | undefined;
}
